{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "administratorLogin": {
            "type": "string",
		    "defaultvalue": "azpgadmin"
        },
        "administratorLoginPassword": {
            "type": "securestring"
        },
        "location": {
            "type": "string",
			"defaultValue": "[resourceGroup().location]"
        },
        "serverName": {
            "type": "string",
			"defaultvalue": "postgresql-training"
        },
        "ipAddr": {
            "type": "string",
			"defaultvalue": ""
        }
    },
    "variables": {
        "serverEdition": "GeneralPurpose",
        "storageSizeGB": 32,
        "haEnabled": "Disabled",
        "availabilityZone": "",
        "standbyAvailabilityZone": "",
        "version": "14",
		"storageAutogrow": "Disabled",
		"backupRetentionDays": 7,
        "apiVersion": "2021-06-01",
		"geoRedundantBackup": "Enabled",
		"vmName": "Standard_D4s_v3",
        "firewall": "MyIPAddress",
        "identityData": {},
        "vnetData": {"Network": {}},
        "dataEncryptionData": {},
        "authConfig": {},
        "tags": {}
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersion')]",
            "location" : "[parameters('location')]",
            "name": "[parameters('serverName')]",
            "identity": "[if(empty(variables('identityData')), json('null'), variables('identityData'))]",
            "properties": {
                "version": "[variables('version')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "Network": "[if(empty(variables('vnetData').Network), json('null'), variables('vnetData').Network)]",
                "availabilityZone": "[variables('availabilityZone')]",
                "Storage": {
                    "StorageSizeGB": "[variables('storageSizeGB')]",
                    "Autogrow": "[variables('storageAutogrow')]"
                },
                "Backup": {
                    "backupRetentionDays": "[variables('backupRetentionDays')]",
                    "geoRedundantBackup": "[variables('geoRedundantBackup')]"
                },
                "highAvailability": {
                    "mode": "[variables('haEnabled')]",
                    "standbyAvailabilityZone": "[variables('standbyAvailabilityZone')]"
                },
                "dataencryption": "[if(empty(variables('dataEncryptionData')), json('null'), variables('dataEncryptionData'))]",
                "authConfig": "[if(empty(variables('authConfig')), json('null'), variables('authConfig'))]"
            },
            "sku": {
                "name": "[variables('vmName')]",
                "tier": "[variables('serverEdition')]"
            },
            "tags": "[variables('tags')]",
            "type": "Microsoft.DBforPostgreSQL/flexibleServers"
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
            "apiVersion": "2022-12-01",
            "name": "[concat(parameters('serverName'),'/',variables('firewall'))]",
            "properties": {
                "endIpAddress": "[parameters('ipAddr')]",
                "startIpAddress": "[parameters('ipAddr')]"
            },
           "dependsOn": [
                "[concat('Microsoft.DBforPostgreSQL/flexibleServers/', parameters('serverName'))]"
            ]
           
        }
    ]
}
